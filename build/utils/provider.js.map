{"version":3,"file":"provider.js","sourceRoot":"","sources":["../../src/utils/provider.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,aAAa,EAAE,UAAU,EAAiD,MAAM,OAAO,CAAC;AAExG,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAOzC,MAAM,WAAW,GAAG,aAAa,CAAiC,SAAS,CAAC,CAAC;AAE7E,MAAM,CAAC,MAAM,cAAc,GAA+B,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,EAAE,EAAE;IACtF,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC;QAClC,GAAG,aAAa;KACnB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAEtB,MAAM,KAAK,GAAuB,YAAY,CAAC;IAE/C,OAAO,oBAAC,WAAW,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,IAAG,QAAQ,CAAwB,CAAC;AACjF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,GAAuB,EAAE;IACtD,MAAM,OAAO,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;IACxC,IAAI,CAAC,OAAO,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;IAC3E,CAAC;IACD,OAAO,OAAO,CAAC;AACnB,CAAC,CAAC","sourcesContent":["import React, { createContext, useContext, useState, ReactNode, Dispatch, SetStateAction } from 'react';\nimport { Configuration, FitbitProviderData } from '../types/client';\nimport { FitbitClient } from '../client';\n\ninterface DataContextProps {\n    children: ReactNode;\n    configuration: Configuration;\n}\n\nconst DataContext = createContext<FitbitProviderData | undefined>(undefined);\n\nexport const FitbitProvider: React.FC<DataContextProps> = ({ children, configuration }) => {\n    const fitbitClient = new FitbitClient({\n        ...configuration\n    }).useConfiguration();\n\n    const value: FitbitProviderData = fitbitClient;\n\n    return <DataContext.Provider value={value}>{children}</DataContext.Provider>;\n};\n\nexport const useFitbitProvider = (): FitbitProviderData => {\n    const context = useContext(DataContext);\n    if (!context) {\n        throw new Error('useModalContext must be used within a ModalProvider');\n    }\n    return context;\n};\n"]}